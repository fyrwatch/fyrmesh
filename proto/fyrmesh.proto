/*
MIT License

Copyright (c) 2021 Manish Meganathan, Mariyam A.Ghani

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

syntax = "proto3";

option go_package = "/proto";

package main;

message Trigger {
    string triggermessage = 1;
    map<string, string> metadata = 2;
}

message Acknowledge {
    bool success = 1;
    string error = 2;
}

message MeshOrchStatus {
    bool connected = 1;
    string controllerID = 2;
    int64 controlnodeID = 3;
    NodeList nodelist = 4;
    string meshSSID = 5;
    string meshPSWD = 6;
    int32 meshPORT = 7;
}

message SimpleLog {
    string message = 1;
}

message ComplexLog {
    string logsource = 1;
    string logtype = 2; 
    string logtime = 3;
    string logmessage = 4;
    map<string, string> logmetadata = 5;
}

message ControlCommand {
    string command = 1;
    map<string, string> metadata = 2;
}

message NodeList {
    map<int64, string> nodes = 1;
}

service Interface {
    rpc Read (Trigger) returns (stream ComplexLog) {}
    rpc Write (ControlCommand) returns (Acknowledge) {}
}

service Orchestrator {
    rpc Status (Trigger) returns (MeshOrchStatus) {}
    rpc Connection (Trigger) returns (Acknowledge) {}
    rpc Observe (Trigger) returns (stream SimpleLog) {}
    rpc Ping (Trigger) returns (Acknowledge) {}
    rpc Nodelist (Trigger) returns (NodeList) {}
    rpc Command (ControlCommand) returns (Acknowledge) {}
    rpc SchedulerToggle (Trigger) returns (Acknowledge) {}
    rpc Simulate (Trigger) returns (Acknowledge) {}
}